// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    id, name, email, password, password_salt, created_at, updated_at
) VALUES (
    $1, $2, $3, $4, $5, $6, $7
) RETURNING id, name, email, password, password_salt, created_at, updated_at
`

type CreateUserParams struct {
	ID           pgtype.UUID      `json:"id"`
	Name         string           `json:"name"`
	Email        string           `json:"email"`
	Password     []byte           `json:"password"`
	PasswordSalt []byte           `json:"password_salt"`
	CreatedAt    pgtype.Timestamp `json:"created_at"`
	UpdatedAt    pgtype.Timestamp `json:"updated_at"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.ID,
		arg.Name,
		arg.Email,
		arg.Password,
		arg.PasswordSalt,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Password,
		&i.PasswordSalt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
